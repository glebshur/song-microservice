spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/file_api_db
    username: postgres
    password: postgres11
  cloud:
    aws:
      credentials:
        access-key: AKIAIOSFODNN7EXAMPLE
        secret-key: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      region:
        static: eu-west-1
      endpoint: http://awslocal:4566
      s3:
        path-style-access-enabled: on
  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 15MB
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/song-microservice
          jwk-set-uri: http://localhost:8080/realms/song-microservice/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: file-api
            client-secret: w05Cv6FPrhjwWh0JDrRmOadc40LOe30o
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            token-uri: http://localhost:8080/realms/song-microservice/protocol/openid-connect/token
  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: superadmin
  data:
    mongodb:
      authentication-database: admin
      host: localhost
      port: 27017
      database: file-storage
      username: admin
      password: superadmin

jwt:
  auth:
    converter:
      client-id: file-api
      principal-attribute: preferred_username

server:
  port: 9000
  error:
    include-message: always
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

management:
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
resilience4j:
  circuitbreaker:
    instances:
      s3StorageBreaker:
        failure-rate-threshold: 50
        minimum-number-of-calls: 3
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        sliding-window-type: count_based

local-base-path: temp-files/songs
files-per-directory: 3000

aws:
  s3:
    bucket-name: file-bucket
  sqs:
    queue-name: file-enricher-queue

song-api-name: song-api

main-storage: minio-storage

minio:
  endpoint: http://localhost:9000
  access-key: mUB21fSTBmCxPJP5djw8
  secret-key: 4hdhBmTMO2q9VWCy9It6TyKCx2rQuEJUEivEz42G
  bucket-name: file-bucket

rabbitmq:
  queue-name: file-enricher-queue

main-sender: rabbitmq-sender
